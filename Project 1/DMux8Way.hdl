// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //// Replace this comment with your code.
    DMux(in=in, sel=sel[0], a=out1, b=out2); // xx0 ou xx1

    DMux(in=out1, sel=sel[1], a=out3, b=out4); // x00 ou x10
    DMux(in=out2, sel=sel[1], a=out5, b=out6); // x01 ou x11

    DMux(in=out3, sel=sel[2], a=a, b=e); // 000 ou 100
    DMux(in=out4, sel=sel[2], a=c, b=g); // 010 ou 110
    DMux(in=out5, sel=sel[2], a=b, b=f); // 001 ou 101
    DMux(in=out6, sel=sel[2], a=d, b=h); // 011 ou 111
}